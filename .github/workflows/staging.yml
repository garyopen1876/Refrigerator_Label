name: Refrigerator_Label CI/CD

on:
  push:
    branches: [ staging ]
  pull_request:
    branches: [ staging ]

jobs:
  checkout:
    name: checkout
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
  build_front:
    name: build_front
    
    needs: checkout
    runs-on: self-hosted
     
    strategy:
      matrix:
        node-version: [17.x]
        
    environment: staging 
    
    env:
      REACT_APP_BACK_END: ${{secrets.REACT_APP_BACK_END}}
      
    steps:
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: front ci
      run: npm --prefix ./refrigerator_label_front/ ci
    - name: front test
      run: npm --prefix ./refrigerator_label_front/ test
    - name: front build
      run: npm --prefix ./refrigerator_label_front/ run build --if-present
    - name: front ssh rsync
      run: rsync -avz -e 'ssh' ./refrigerator_label_front/build ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_PATH }}/refrigerator_label_front
  
  build_back:
    name: build_back
    
    needs: checkout
    runs-on: self-hosted
     
    strategy:
      matrix:
        node-version: [17.x]
        
    environment: staging 
    
    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: 'create back env file'
        run: |
          touch ./refrigerator_label_back/.env
          echo PORT='${{ secrets.BACK_PORT }}' >> ./refrigerator_label_back/.env
          echo IP_ADDRESS='${{ secrets.IP_ADDRESS }}' >> ./refrigerator_label_back/.env
          echo FRONTEND_URL='${{ secrets.FRONTEND_URL }}' >> ./refrigerator_label_back/.env
          echo CORN_SCHEDULE='${{ secrets.CORN_SCHEDULE }}' >> ./refrigerator_label_back/.env
          echo NODEMAILER_USER='${{ secrets.NODEMAILER_USER }}' >> ./refrigerator_label_back/.env
          echo NODEMAILER_PASSWORD='${{ secrets.NODEMAILER_PASSWORD }}' >> ./refrigerator_label_back/.env
          echo SUPER_USER_USERNAME='${{ secrets.SUPER_USER_USERNAME }}' >> ./refrigerator_label_back/.env
          echo SUPER_USER_PASSWORD='${{ secrets.SUPER_USER_PASSWORD }}' >> ./refrigerator_label_back/.env
          echo SUPER_USER_MAIL='${{ secrets.SUPER_USER_MAIL }}' >> ./refrigerator_label_back/.env
          echo JWT_SECRET='${{ secrets.JWT_SECRET }}' >> ./refrigerator_label_back/.env
          echo DB_USERNAME='${{ secrets.DB_USERNAME }}' >> ./refrigerator_label_back/.env
          echo DB_PASSWORD='${{ secrets.DB_PASSWORD }}' >> ./refrigerator_label_back/.env
          echo DB_DATABASE='${{ secrets.DB_DATABASE }}' >> ./refrigerator_label_back/.env
          echo DB_HOST='${{ secrets.DB_HOST }}' >> ./refrigerator_label_back/.env
          echo DB_PORT='${{ secrets.DB_PORT }}' >> ./refrigerator_label_back/.env
          echo DB_DIALECT='${{ secrets.DB_DIALECT }}' >> ./refrigerator_label_back/.env
          echo USER_GET_URL='${{ secrets.USER_GET_URL }}' >> ./refrigerator_label_back/.env
      - name: back ci
        run: npm --prefix ./refrigerator_label_back/ ci
      - name: test database create
        run: cd refrigerator_label_back && npx sequelize db:migrate --env test && cd ..
      - name: test data input
        run: cd refrigerator_label_back && npx sequelize db:seed:all --env test && cd ..
      - name: back test
        run: npm --prefix ./refrigerator_label_back/ test
      - name: back ssh rsync
        run: rsync -avz --exclude 'node_modules' --exclude '*.sqlite3' -e 'ssh' ./refrigerator_label_back ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_PATH }}
      - name: back ssh install
        run: ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} 'npm --prefix ${{ secrets.DEPLOY_PATH }}/refrigerator_label_back install'
